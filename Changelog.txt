

==============================
Release 2.8.?.0
==============================
2018-05-10    Add objects for the DataGrid and its children
2018-05-06    Add class to the utilities for a more easy access to the AutomationPatterns
2018-05-05    Add methods to the UI class to get direct or descendants children without a condition


==============================
Release 2.8.0.0
==============================
2018-04-13    Change references to the UIAComWrapper using the open source alternatives from GitHub/NuGet


==============================
Release 2.7.2.0
==============================
2016-07-01    Catch exceptions from the MS automation framework to please the "with" timeout settings


==============================
Release 2.7.0.0
==============================
2016-06-20    Use alternative UI search methods to prevent memory leaks caused by the TreeWalker


==============================
Release 2.6.2.0
==============================
2016-02-27    Adjust usage of the keybd_event for key down and up


==============================
Release 2.6.1.0
==============================
2016-02-13    Adjust mouse_event signatur used in the MouseEx which causes the visual studio debugger to crash
              Remove usage of the AutomationElement.GetClickablePoint. This on some machines sometimes causes crashes


==============================
Release 2.6.0.0
==============================
2015-12-24    Update 3rdParty libraries to have it stand-alone
2015-12-23    Remove mouse move in the ColorDetector
              Add different overloads for GetColor
              Fix wrong WinApi call for typing a single key using the KeyboardEx
              Add missing methods to the KeyboardEx
              Add SelectedText property to the BasicEdit
2015-12-22    The MouseEx now can set the current cursor position either instantly, or from a point over a period of time
              Add PressButtons and ReleaseButtons to the MouseEx (Together with Move drag & drop can be simulated)
2015-12-21    Ready implemented the new KeyboardEx to work without the MSTest CodedUI framework running
              Nearly ready implemented the new MouseEx to work without the MSTest CodedUI framework running (Some new functionality is missing)
2015-12-16    Start bring CodedUI stand alone. Target is to be able to let it run with Visual Studio 2015 Professional or lower
              MouseEx: Emulate click and doubleclick with specific mouse buttons without the MSTest CodedUI framework running


==============================
Release 2.4.2.X
==============================
2015-04-08    WindowFinder: Add possibility to find a window by its automation ID


==============================
Release 2.4.1.X
==============================
2015-03-27    LogWriter: Add possibility to let log files be written instantly when an action happen
2015-03-22    LogWriter: Add some settings how exactly the log line should be formatted


==============================
Release 2.4.0.X
==============================
2015-02-20    CodedUIEnvironment: The listener was not configurable
              LoggedException: Add LoggedException to write error to the activity logs
              LogWriter: Add configurable activity logs
2015-02-14    Add possibilies to the the window size, position and state into the BasicWindow.Unsafe
              WindowSetup: Add new WindowSetup object for a more easy window setup
2015-02-10    CodedUIEnvironment: Add possibility to configure the listeners from the CodedUIEnvironment
              *Listener: Allow async invoke of the listener events
2015-01-10    BasicElementData: Add IsEnabled property
              BasicElementData: Add IsVisible property
              *Listener: Add possibility to get informed if a window or element state changed
2014-12-12    WindowFinder: Add WrongSetupException to be thrown if an assembly is missing which prevents CodedUI to run
              UI: Add possibility to search with the setting that the element have to be usable (visible and enabled)


==============================
Release 2.2.0.X
==============================
2014-07-15    BasicElements: Add possibility to make a shadow copy of each basic element
              UI: Add possibility to read the full UI tree as a shadow copy
              BasicWindow: GetChildWindows was return windows even they are not the child windows
2014-07-13    BasicWindowBase: Implement Equals with use of the NativeWindowHandle
              Do: Add possibility to repeat Do actions
2014-07-12    BasicWindowBase: Add possibility to get the parent window of another window
              BasicWindowBase: Add possibility to throw an exception if the parent window is not available
2014-07-11    WindowFinder: Fix missing usage of the Is parameter
              WindowFinder: Use different WinAPI method to determine the child and parent relationship
2014-07-10    CodedUIEnvironment: Add settings for defaults in CombinableAnd and CombinableWith
              WindowFinder: Add with Is the possibility to find windows which has a specific relation to another object
2014-07-09    DynamicSleep: Add DynamicSleep
              CodedUIEnvironment: Add CodedUIEnvironment object for global coded UI settings
2014-05-31    From: Add possibility to start UI element search from the main window of the current to test process
              From: Add possibility to start UI element search from the last found window
              From: Add possibility to start UI element search from the desktop
2014-05-28    By: Add possibility to search for UI elements which has the keyboard focus
2014-05-26    BasicWindow: Add support for all .net available languages for the window buttons like minimize, maximize and close

==============================
Release 2.0.0.X
==============================
2014-04-07    Rename "Using" by "Use"
              Adjust error output
2014-04-05    Remove methods to search for children in the BasicList and BasicCombobox themself, they was not working stable enough
              If no timeout was set, the UI and WindowFinder search methods was return too fast even a result would be able to return
              The Do.Launch was has really launched the application
2014-04-04    Adjust documentation to not show any warning
              Add documentations
2014-04-03    Write usage of the interval in exceptions as well
              Add possibility to define an interval for searching for windows
              Add possibility to define an interval for waiting of the CPU idle
              Set the working directory of the proces called by the Do.Launch(*)
              Add possibility to define an interval for searching of UI elements
2014-04-02    Let the MouseEx and KeyboardEx return the CombinableDo to be able to append additional actions
2014-04-01    Add possibility to get children and parents from BasicElements
2014-03-31    Add possibility to append do actions on basic elements
              Implement chain-of-actions
              Implement searching for the full UI tree 
2014-03-30    Merge searching for messagebox and dialogs into a generic method of the WindowFinder
              Remove timeout on searching the single OK button to get rid of the changing automation ID in the windows message box
              Fix wrong automation ID in BasicFontPickerDialog
              Bring base object to the windows and dialogs to be used for the window searcher and for eliminating duplicate code
              Add reading of the foreground window
              Add search for font picker and color picker dialogs in the WindowSearcher
              Add BasicColorPickerDialog
              Let derive the dialogs from BasicDialog because they have not all functionality of BasicWindows
              Add BasicFontPickerDialog
2014-03-29    Add BasicSaveFileDialog and BasicBrowseFolderDialog
              Adjust BasicOpenFileDialog for missing elements and to be more save to find the correct buttons
              Add functionality to search for message boxes in the WindowFinder
              Renew the WindowFinder to have the new syntax with much more functionality
              Replace StringComparison enum by an own CompareKind for the UI object for a better element search
              Remove MessageBoxHandler, this functionality is inside the BasicMessageBox
              Replace BasicElementFinder by a newer UI object with much more possibilities
              Adjust inner structure for 2.0.0.0. Break downgrade compatibility, it will be ensured after 2.0.0.0 or later
2014-03-16    Take over all objects from 1.0.0.0
==============================

Version denotation:
<Major> . <Incompatible Changes and new Features> . <Bugfixes and other corrections> . <Visual Studio Version>
